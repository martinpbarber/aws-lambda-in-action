---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS Lambda in Action: Chapter 2

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*

  NodeLambdaFunction:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: greetingsOnDemand-Node
      Description: Returns greetings when you ask for them
      Runtime: nodejs4.3
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 128
      Timeout: 3
      Code:
        ZipFile: !Sub |
          console.log('Loading function');
          exports.handler = (event, context, callback) => {
              console.log('Received event:', JSON.stringify(event, null, 2));
              console.log('name =', event.name);
              var name = '';
              if ('name' in event) {
                  name = event['name'];
              } else {
                  name = 'World';
              }
              var greetings = 'Hello ' + name + '!';
              console.log(greetings);
              callback(null, greetings);
          };

  PythonLambdaFunction:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: greetingsOnDemand-Python
      Description: Returns greetings when you ask for them
      Runtime: python2.7
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 128
      Timeout: 3
      Code:
        ZipFile: !Sub |
          import json
          print('Loading function')
          def lambda_handler(event, context):
              print('Received event: ' + json.dumps(event, indent=2))
              if 'name' in event:
                  name = event['name']
              else:
                  name = 'World'
              greetings = 'Hello ' + name + '!'
              print(greetings)
              return greetings
